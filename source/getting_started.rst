.. index::
   single: Getting Started

Getting Started
===============

このセクションは、主にWindowsユーザーを対象に書かれています。
LinuxにGit Extensionsをインストールする追加のセクションがあります。

.. index::
   single: Getting Started; インストール


インストール
------------

msysgit、kdiff3、そしてGit Extensionsをシングルクリックでインストールできるインストーラーがあります。
32bit/64bitのどちらのバージョンをインストールするかは、インストーラーが検出します。
インストーラーは次の場所から入手できます。 `インストーラーを入手 <http://code.google.com/p/gitextensions/>`_

.. figure:: /images/install/install1.png

.. figure:: /images/install/install2.png

    Git Extensionsはmsysgitに大きく依存しています。msysgitをインストールしていない場合は、まずインストールしてください。
    Kdiff3はオプションですが、マージツールとしておすすめします。

.. figure:: /images/install/install3.png

.. figure:: /images/install/install4.png

    インストールオプションを選択します。

.. figure:: /images/install/install5.png

    使用するSSHクライアントを選択します。
    Windowsと非常によく統合されているので、PuTTYをデフォルトにしています。

.. figure:: /images/install/install6.png

Linuxへのインストール
---------------------

まずは次のビデオを見て下さい。 `Install Git Extensions on Ubuntu 11.04  <http://www.youtube.com/watch?v=zk2MMUQuW4s>`_

さらに助けが必要ならフォーラムを確認してください。 https://groups.google.com/forum/?fromgroups=#!forum/gitextensions

Macへのインストール
-------------------

First we need to make sure you have latest mono version on your mac. This section will cover installation of mono 2.10.11 over a mac.

1) Download mono latest version, you can always check for this here http://www.go-mono.com/mono-downloads/download.html
2) After you completed the download, you will see a .dmg file. Double click it to open the package.
3) Inside the .dmg file you will have MonoFramework-{version}.pkg. Double click to start the installation process.
4) Follow the wizard until it's completion.
5) If everything went ok, you should open your terminal and check mono version:

$ mono --version  
Mono JIT compiler version 2.10.11 (mono-2-10/2baeee2 Wed Jan 16 16:40:16 EST 2013)
Copyright (C) 2002-2012 Novell, Inc, Xamarin, Inc and Contributors. www.mono-project.com

	TLS:           normal
	SIGSEGV:       normal
	Notification:  kqueue
	Architecture:  x86
	Disabled:      none
	Misc:          softdebug 
	LLVM:          yes(2.9svn-mono)
	GC:            Included Boehm (with typed GC)

6) Now, download GitExtensions latest version from this website https://code.google.com/p/gitextensions/downloads/list. Remember to select the appropriate package
otherwise you could have problems.
7) Browser into the folder you extracted the package and just run mono command, like the example below:

$ mono GitExtensions.exe 

This is the minimal setup you need in order to run GitExtensions

.. index::
   single: Getting Started; 設定

設定
----

Git Extensionsの初回起動時にすべての設定が検証されます。
いずれかの設定を変更する必要がある場合は、Git Extensionsの設定ダイアログが表示されます。
修正する必要のある設定は赤い背景で表示されます。
それをクリックすることで、Git Extensionsが修正するための設定画面を開きます。

|

.. image:: /images/settings/checklist.png

Git Extensions固有の設定は、すべてWindowsのレジストリに保存されます。
Gitで使用される設定は、すべてGitの設定ファイルに保存されます。
グローバルな設定は、ユーザーディレクトリの ``.gitconfig`` というファイルに保存されます。
ローカル設定は、リポジトリの中の ``.git\config`` に保存されます。

|

.. image:: /images/settings/git.png


「Git」設定では、Gitのリポジトリにアクセスするために必要な設定を行います。
データベースは外部のツールによってアクセスされます。
Windowsの場合、通常はmsysgitかcygwinが使われます。
Git Extensionは自動的にそれらの設定を構成しようとします。

+----------------------------------------------+--------------------------------------------------------------------------+
|gitの実行に使用するコマンド(git.cmdかgit.exe) | Git ExtensionsがGitコマンドを実行するために必要。                        |
|                                              | (msysgitかcygwinの)gitコマンドのフルパスを指定します。                   |
+----------------------------------------------+--------------------------------------------------------------------------+
|Linuxツールへのパス(shへのパス)               | Git ExtensionsはいくつかのLinuxツールを使用します。msysgitがインストール |
|                                              | されている場合、これらのツールはmsysgitのbinディレクトリにあります。     |
+----------------------------------------------+--------------------------------------------------------------------------+

gitで使用されるグローバル設定ファイルはホームディレクトリに配置されます。
いくつかのシステムではホームディレクトリが設定されていないか、ネットワークドライブ上に存在することがあります。
Git Extensionsは使用されてる環境に合わせて最適な設定を検出しようとします。
gitのグローバル設定ファイルが既に存在する場合は、それを使用します。
git用にホームディレクトリを再設定する必要がある場合は、この設定を変更して下さい。
それ以外の場合は、デフォルトの設定のままにしておきます。

|

.. image:: /images/settings/git_extensions.png

「Git Extensions」設定ではGit Extensionsが正常に動作するために必要な設定を行います。
git.cmdとgit.exeへのパスは、ここで設定することができます。
これは、それらがシステムパスに含まれていない場合にのみ必要な設定です。

+---------------------------------------------------+----------------------------------------------------------------------------+
| 一時退避(stash)数をBrowse画面の                   | stashを多用している場合、stashされたアイテム数をツールバー上に表示するので |
| ステータスバーに表示                              | 便利です。このオプションは大規模なリポジトリでは深刻な速度低下の           |
|                                                   | 原因になるため、デフォルトではオフになっています。                         |
+---------------------------------------------------+----------------------------------------------------------------------------+
| FileSystemWatcherを使用して、                     | インデックスの状態を確認するのにFileSystemWatcherを使用することで、        |
| インデックスが変更されたかチェックする            | パフォーマンスが改善されるケースがあります。                               |
|                                                   | コミットログでリフレッシュの問題が出る場合はこのオプションをオフにします。 |
+---------------------------------------------------+----------------------------------------------------------------------------+
| 作業ディレクトリの変更をリビジョングラフ上に      | このオプションを有効にすると、リビジョングラフに追加で2つの状態が          |
| 表示する                                          | 表示されます。1つは現在のワーキングディレクトリの状態を表示します。        |
|                                                   | 2つ目はステージングエリアの状態を表示します。                              |
|                                                   | 大規模なリポジトリをブラウジングする場合、このオプションは速度低下を       |
|                                                   | 引き起こす可能性があります。                                               |
+---------------------------------------------------+----------------------------------------------------------------------------+
| 起動時に読み込むコミットの数                      | Git Extensionsはコミットログの読み込みに遅延ロードを行います。             |
|                                                   | 起動速度を上げるためには、この数を減らします。                             |
|                                                   | この数を増やすと、素早くスクロールできます。                               |
|                                                   | Turn of revision graph for optimal result!                                 |
+---------------------------------------------------+----------------------------------------------------------------------------+
| 処理に成功したときにダイアログを閉じる            | 処理が完了した時に、自動的にダイアログを閉じます。                         |
|                                                   | 処理の結果を確認したい場合は、このオプションをオフにします。               |
|                                                   | 処理に失敗した場合は、ダイアログは開いたままになります。                   |
+---------------------------------------------------+----------------------------------------------------------------------------+
| gitプロセス動作時にコンソールウィンドウを表示する | Git Extensionsはgitデータベースにアクセスするためにコマンドラインツールを  |	
|                                                   | 使用します。一部の環境では、プロセス動作時にコマンドラインのダイアログを   |
|                                                   | 見ることが役に立つかもしれません。                                         |
+---------------------------------------------------+----------------------------------------------------------------------------+
| ファイルの歴史でファイル名の変更も追跡する        | ファイルの履歴でファイル名の変更も追跡しようとします。                     |
+---------------------------------------------------+----------------------------------------------------------------------------+
| リビジョングリッドクイック検索のタイムアウト [ms] | リビジョングラフのクイック検索のタイムアウトを設定します。                 |
|                                                   | リビジョングラフにフォーカスがあり、タイプを開始するとクイック検索が       |
|                                                   | 有効になります。                                                           |
+---------------------------------------------------+----------------------------------------------------------------------------+
| パッチ送信用のSMTPサーバ                          | パッチの送信に使用するSMTPサーバを設定します。                             |
+---------------------------------------------------+----------------------------------------------------------------------------+

|

.. image:: /images/settings/appearance.png

「外観」設定

+---------------------------------------------------+----------------------------------------------------------------------------+
| 絶対日付の代わりに相対日付を表示する              | 絶対日付の代わりに相対日付(例：2週間前)を表示します。                      |
+---------------------------------------------------+----------------------------------------------------------------------------+
| gravatar.comから著者のイメージを取得              | gravatarからユーザーのアバターを取得するかどうかを設定します。             |
+---------------------------------------------------+----------------------------------------------------------------------------+
| 画像サイズ                                        | ユーザーのアバターの表示サイズを設定します。                               |
+---------------------------------------------------+----------------------------------------------------------------------------+
| 画像を [ N ] 日キャッシュ                         | 長い期間を設定するとリクエストは少なくなりますが、ユーザーのアバターの     |
|                                                   | 変更を更新するまでにより長い時間がかかります。                             |
+---------------------------------------------------+----------------------------------------------------------------------------+
| キャッシュのクリア                                | キャッシュされたアバターをクリアします。                                   |
+---------------------------------------------------+----------------------------------------------------------------------------+
| フォント                                          | 使用するフォントを変更します。                                             |
+---------------------------------------------------+----------------------------------------------------------------------------+
| 言語                                              | Git Extensionsのインターフェイスで使用する言語を選択します。               |
+---------------------------------------------------+----------------------------------------------------------------------------+
| スペルチェックに使う辞書                          | コミットダイアログでのスペルチェックに使用する辞書を選択します。           |
+---------------------------------------------------+----------------------------------------------------------------------------+

|

.. image:: /images/settings/colors.png

「色」の設定では以下の項目を設定できます。

+-------------------------------+-----------------------------------------------------------------------------------------------+
| リビジョングラフ              | リビジョングラフで使用する色を設定します。                                                    |
+-------------------------------+-----------------------------------------------------------------------------------------------+
| Diff                          | 変更箇所を示すために使用する色を設定します。                                                  |
+-------------------------------+-----------------------------------------------------------------------------------------------+
| アプリケーションアイコン      | アプリケーションアイコンの色を設定します。                                                    |
|                               | アプリケーションを複数開いている時に認識しやすくなります。                                    |
+-------------------------------+-----------------------------------------------------------------------------------------------+

|

.. image:: /images/settings/start_page.png

スタートページに表示する項目を編集することができます。
このページでは、カテゴリの追加や削除ができます。
カテゴリごとにRSSのフィードを設定したり、リポジトリを追加したりできます。
スタートページ上でコンテキストメニューを使用することで順序の変更ができます。

|

.. image:: /images/settings/global_settings.png

「グローバル設定」ページではいくつかのグローバルなGitの設定を行うことができます。


+------------------------+-------------------------------------------------------------------------------------------------+
| ユーザ名               | コミットやパッチに表示するユーザ名を設定します。                                                |
+------------------------+-------------------------------------------------------------------------------------------------+
| ユーザのメールアドレス | コミットやパッチに表示するユーザのメールアドレスを設定します。                                  |
+------------------------+-------------------------------------------------------------------------------------------------+
| エディタ               | git.exeが開くエディタを設定します。(例：コミットメッセージを編集するため)                       |
|                        | コマンドラインでgit.exeから呼び出される場合にのみ使用され、Git Extensionsからは使用しません。   |
|                        | デフォルトでは、Gitはコマンドラインのテキストエディタであるviを使用します。                     |
+------------------------+-------------------------------------------------------------------------------------------------+
| マージツール           | マージの際のコンフリクトを解決する際に使用するマージツールを設定します。                        |
|                        | Git Extensionsは、システムから通常利用されるマージツールを検索します。                          |
+------------------------+-------------------------------------------------------------------------------------------------+
| マージツールのパス     | マージツールのパスを設定します。                                                                |
|                        | Git Extensionsは、システムから通常利用されるマージツールを検索します。                          |
+------------------------+-------------------------------------------------------------------------------------------------+
| マージツールのコマンド | Gitがマージツールを呼び出す際に使用するコマンドを設定します。                                   |
|                        | マージツールが設定されると、Git Extensionsは自動的に設定しようとします。                        |
|                        | Gitがサポートしているマージツール(例：kdiff3)の場合、この設定は空のままにすることができます。   |
+------------------------+-------------------------------------------------------------------------------------------------+
| Diffツール             | 使用するDiffツールを設定します。                                                                |
+------------------------+-------------------------------------------------------------------------------------------------+
| Diffツールのパス       | Diffツールのパスを設定します。                                                                  |
+------------------------+-------------------------------------------------------------------------------------------------+
| Diffツールのコマンド   | GitがDiffツールを呼び出す際に使用するコマンドを設定ます。                                       |
|                        | Gitがマージツールをサポートしていない場合、Diffツールのコマンドを設定するべきです。             |
+------------------------+-------------------------------------------------------------------------------------------------+
| 改行の扱い             | Gitによる改行コードの扱いを設定します。                                                         |
+------------------------+-------------------------------------------------------------------------------------------------+
| エンコード             | Git Extensionsで使用したいエンコードを選択してください。                                        |
+------------------------+-------------------------------------------------------------------------------------------------+

|

.. image:: /images/settings/ssh.png

「SSH」ページでは、Gitで使用するSSHクライアントを設定できます。
Git ExtensionsはPuTTYに最適化されています。
PuTTYを使用しない場合にユーザの入力が必要な場面で、Git Extensionsはコマンドラインのダイアログを表示します。
Git Extensionsは必要に応じてPuTTYで使用するSSH鍵を読み込むことができます。

.. index::
   single: Getting Started; スタートページ

スタートページ
--------------

スタートページには最も一般的なタスク、最近開いたリポジトリ、そしてお気に入りが表示されます。
スタートページの左側は静的なものです。
その他の項目については編集することができます。	

.. image:: /images/start_page.png

リポジトリは、コンテキストメニューを使用することでお気に入りに移動することができます。
カテゴリに新しいリポジトリを追加するには、コンテキストメニューの「編集」を選択します。

.. image:: /images/move_to_category.png

.. index::
   single: Getting Started; 既存のリポジトリをクローンする

既存のリポジトリをクローンする
------------------------------

メニューオプションの ``リポジトリのクローン`` を使用することで、既存のリポジトリをクローンできます。
クローンするリポジトリの種類を選択することができます。
個人的に利用する場合には、 ``個人リポジトリ`` を選択する必要があります。
中央リポジトリ、もしくは公開するリポジトリの場合には、 ``作業ディレクトリを持たない中央リポジトリ`` を選択します。
中央リポジトリには作業ディレクトリがありません。

.. image:: /images/clone.png

クローンするリポジトリは、ネットワーク共有されているかもしれないし、インターネット／イントラネットを介してアクセスされるかもしれない。
プロトコル(httpやssh)によっては、PuTTYにSSH鍵を読み込ませる必要があるかもしれません。

クローンする際に作成できるリポジトリには2つの種類があります。
個人リポジトリには、完全な履歴と、ソースツリーの作業コピーがともに含まれています。
中央リポジトリは、開発者が他の人と共有したい変更内容をpushするための公開リポジトリとして使われます。
中央リポジトリには、完全な履歴は含まれますが、個人リポジトリのような作業ディレクトリは含まれません。

.. index::
   single: Getting Started; 新しいリポジトリを作成する

新しいリポジトリを作成する
--------------------------

既存のリポジトリで作業したくない場合、独自のリポジトリを作成することができます。
新しいリポジトリを作成するには、メニューオプションから  ``リポジトリの作成`` を選択します。

.. image:: /images/new_repository.png

個人リポジトリを作成するか、中央リポジトリを作成するかを選択できます。

個人リポジトリは、通常の作業ディレクトリと同じ様に見えますが、履歴を記録するための ``.git`` というディレクトリがルートレベルに存在します。
これが最も一般的なリポジトリです。

中央リポジトリは、履歴情報のみを格納しています。
中央リポジトリは作業ディレクトリを持っていないため、中央リポジトリでリビジョンをチェックアウトすることはできません。
中央リポジトリでは、変更のマージやプルを行うこともできません。
この種のリポジトリは、開発者が変更をプッシュしたり、変更をプルしたりするための公開リポジトリとして使用されます。
